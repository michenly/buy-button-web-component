{"version":3,"file":"shopify-product.js","sourceRoot":"","sources":["../src/shopify-product/shopify-product.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport {\n  createStorefrontApiClient,\n  type StorefrontApiClient,\n} from '@shopify/storefront-api-client';\n\nimport './elements/product-image';\n\n@customElement('shopify-product')\nexport class ShopifyProductElement extends LitElement {\n  @property({\n    type: String,\n    attribute: 'store-domain',\n  })\n  storeDomain?: string;\n\n  @property({type: String, attribute: 'public-access-token'})\n  publicAccessToken?: string;\n\n  @property({type: String, attribute: 'product-id'})\n  productId?: string;\n\n  @state()\n  client?: StorefrontApiClient;\n\n  @state()\n  product?: {\n    title: string;\n    featuredImage: {\n      altText: string;\n      url: string;\n    };\n    price: string;\n    options: {\n      name: string;\n      values: string[];\n    }[];\n  };\n\n  override connectedCallback() {\n    if (!this.client) {\n      this.createClient();\n      this.getProduct();\n    }\n    super.connectedCallback();\n  }\n\n  override disconnectedCallback() {\n    this.client = undefined;\n    this.product = undefined;\n    super.disconnectedCallback();\n  }\n\n  override update(changedProperties: Map<string, any>) {\n    if (\n      changedProperties.get('storeDomain') &&\n      changedProperties.get('publicAccessToken')\n    ) {\n      this.client = undefined;\n      this.product = undefined;\n      this.createClient();\n    }\n\n    if (changedProperties.get('productId')) {\n      this.product = undefined;\n      this.getProduct();\n    }\n    super.update(changedProperties);\n  }\n\n  override render() {\n    return this.product\n      ? html`\n          <div\n            class=\"has-image shopify-buy__layout-vertical shopify-buy__product\"\n          >\n            <product-image\n              alt-text=\"${this.product.featuredImage.altText ||\n              this.product.title}\"\n              url=\"${this.product.featuredImage.url}\"\n            />\n            <h1\n              class=\"shopify-buy__product__title\"\n              data-element=\"product.title\"\n            >\n              ${this.product.title}\n            </h1>\n            <div\n              class=\"shopify-buy__product__price\"\n              data-element=\"product.prices\"\n            >\n              <span class=\"visuallyhidden\">Regular price&nbsp;</span>\n              <span\n                class=\"shopify-buy__product__actual-price\"\n                data-element=\"product.price\"\n              >\n                ${this.product.price}\n              </span>\n            </div>\n            <div\n              class=\"shopify-buy__product__variant-selectors\"\n              data-element=\"product.options\"\n            >\n              ${this.product.options.map(\n                (option) => html`<div\n                  class=\"shopify-buy__option-select\"\n                  data-element=\"option.option\"\n                >\n                  <label\n                    for=\"Option-1706809233400-0\"\n                    class=\"shopify-buy__option-select__label \"\n                    data-element=\"option.label\"\n                    >${option.name}</label\n                  >\n                  <div\n                    class=\"shopify-buy__option-select-wrapper\"\n                    data-element=\"option.wrapper\"\n                  >\n                    <select\n                      id=\"Option-1706809233400-0\"\n                      class=\"shopify-buy__option-select__select\"\n                      name=\"${option.name}\"\n                      data-element=\"option.select\"\n                    >\n                      ${option.values.map(\n                        (value) =>\n                          html` <option value=\"${value}\">${value}</option>`\n                      )}\n                    </select>\n                    <svg\n                      class=\"shopify-buy__select-icon\"\n                      data-element=\"option.selectIcon\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        d=\"M21 5.176l-9.086 9.353L3 5.176.686 7.647 12 19.382 23.314 7.647 21 5.176z\"\n                      ></path>\n                    </svg>\n                  </div>\n                </div>`\n              )}\n            </div>\n            <div\n              class=\"shopify-buy__btn-wrapper\"\n              data-element=\"product.buttonWrapper\"\n            >\n              <button class=\"shopify-buy__btn\" data-element=\"product.button\">\n                Add to cart\n              </button>\n            </div>\n          </div>\n        `\n      : html``;\n  }\n\n  private createClient() {\n    if (this.storeDomain && this.publicAccessToken) {\n      try {\n        this.client = createStorefrontApiClient({\n          storeDomain: this.storeDomain,\n          publicAccessToken: this.publicAccessToken,\n          apiVersion: '2024-01',\n        });\n      } catch (error) {\n        console.error(\n          `createStorefrontApiClient failed with: ${JSON.stringify(error)}`\n        );\n      }\n    }\n  }\n\n  private async getProduct() {\n    if (this.client && this.productId) {\n      try {\n        const {data, errors} = await this.client.request(\n          this.getProductQuery(),\n          {\n            variables: {\n              id: `gid://shopify/Product/${this.productId}`,\n            },\n          }\n        );\n\n        if (errors) {\n          console.error(`Product fetch failed with: ${JSON.stringify(errors)}`);\n        }\n\n        if (data?.product) {\n          // console.error(`data?.product=${JSON.stringify(data?.product)}`);\n          this.transformProduct(data?.product);\n        }\n      } catch (error) {\n        console.error(\n          `StorefrontApiClient query failed with: ${JSON.stringify(error)}`\n        );\n      }\n    }\n  }\n\n  private getProductQuery() {\n    return `\n      query ProductQuery($id: ID!) {\n        product(id: $id) {\n          title\n          featuredImage {\n            altText\n            url\n          }\n          options {\n            name\n            values\n          }\n          variants(first: 1) {\n            nodes {\n              image {\n                __typename\n                id\n                url\n                altText\n                width\n                height\n              }\n              price {\n                amount\n                currencyCode\n              }\n            }\n          }\n        }\n      }\n    `;\n  }\n\n  private transformProduct(product: any) {\n    this.product = {\n      title: product.title,\n      featuredImage: product.featuredImage,\n      options: product.options,\n      price: product.variants.nodes[0].price.amount,\n    };\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'shopify-product': ShopifyProductElement;\n  }\n}\n"]}